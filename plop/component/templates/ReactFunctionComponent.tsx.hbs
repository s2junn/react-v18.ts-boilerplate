import * as React from 'react'
import { useState, useEffect } from 'react'
import classNames from 'classnames'

import styled from '@emotion/styled'

type {{ properCase ComponentName }}Props = {
    children?: React.ReactNode
    className?: string
}

function {{ properCase ComponentName }}(props: {{ properCase ComponentName }}Props = {}) {
    const [message, setMessage] = useState( 'Hello, World!' )
    const [variable, setVariable] = useState('Test Variable')

    useEffect( () => {
        //TODO: componentDidMount
        return () => {
            //TODO: componentWillUnmount
        }
    }, [])

    useEffect( () => {
        //TODO: shouldComponent Update? componentDidUpdate? 둘 중에 하나 
        return () => {
            //TODO: componentWillUpdate
        }
    }, [variable])

    function handleEvents() {
        //TODO: to do something
    }

    return (
        <Styled{{ properCase ComponentName }} className={classNames('{{ dashCase ComponentName }}', props.className)}>
            { message }<br />
            { props.children }
            <button onClick={ handleEvents }>button</button>
        </Styled{{ properCase ComponentName }}>
    );
};

{{ properCase ComponentName }}.defaultProps = {};

export default React.memo({{ properCase ComponentName }})

const Styled{{ properCase ComponentName }} = styled.div`
&.{{ dashCase ComponentName }} {

}
`